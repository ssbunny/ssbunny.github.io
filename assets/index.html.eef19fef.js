import{r as t,o,e,b as s,a as c,F as l,i as a,d as n}from"./app.1e9fa1d8.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";var i="/assets/classsystem_01.4b8f7a31.png",r="/assets/classsystem_02.896cebe7.png",k="/assets/classsystem_03.3c66263d.png",b="/assets/classsystem_04.76238f75.png",m="/assets/classsystem_05.c46d576f.png",d="/assets/classsystem_06.d9ebc2bd.png",g="/assets/classsystem_07.7cf2e22f.png";const f={},y=a(`<h1 id="extjs-\u6838\u5FC3\u6982\u5FF5-\u7C7B\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#extjs-\u6838\u5FC3\u6982\u5FF5-\u7C7B\u7CFB\u7EDF" aria-hidden="true">#</a> ExtJS \u6838\u5FC3\u6982\u5FF5 - \u7C7B\u7CFB\u7EDF</h1><p><em>[\u672C\u5185\u5BB9\u53EA\u9488\u5BF9 ExtJS 4.x \u548C ExtJS 5.x \u7248\u672C]</em></p><p>JavaScript \u662F\u4E00\u95E8\u5BCC\u6709\u8868\u73B0\u529B\u7684\u7F16\u7A0B\u8BED\u8A00\uFF0C\u5B83\u65E2\u53EF\u4EE5\u8FDB\u884C\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B(OOP)\uFF0C\u4E5F\u53EF\u4EE5\u8FDB\u884C\u51FD\u6570\u5F0F\u7F16\u7A0B(FP)\u3002\u51FD\u6570\u662F JavaScript \u7684\u4E00\u7B49\u516C\u6C11\u3002\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u98CE\u683C\u76F8\u5BF9\u8981\u7B80\u5355\u4E00\u4E9B\uFF0C\u8FD9\u4E5F\u662F ExtJS \u7684\u9009\u62E9\u3002</p><h2 id="\u4F20\u7EDF\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4F20\u7EDF\u65B9\u5F0F" aria-hidden="true">#</a> \u4F20\u7EDF\u65B9\u5F0F</h2><p>\u6211\u4EEC\u5148\u6765\u770B\u4E00\u4E0B\u4F20\u7EDF\u7684\u4F7F\u7528 JavaScript \u5B9E\u73B0 OOP \u7684\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">Programmer</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">&#39;java&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Programmer</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">isProgrammer</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">setName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">program</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; codes in &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lang <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6211\u4EEC\u501F\u7528\u51FD\u6570\u5BF9\u8C61\u6A21\u62DF\u51FA\u201C\u7C7B\u201C\u7684\u6982\u5FF5\uFF0C\u5E76\u521B\u5EFA\u4E86 <code>Programmer</code> \u7C7B\u3002\u540C\u65F6\uFF0C\u7ED9\u6B64\u7C7B\u589E\u52A0\u4E86\u4E24\u4E2A\u5C5E\u6027\uFF1A <code>name</code> \u548C <code>lang</code> \u3002\u7D27\u63A5\u7740\uFF0C\u6211\u4EEC\u5728 Programmer \u7684\u539F\u578B\u5BF9\u8C61\u4E0A\u589E\u52A0\u4E86 <code>isProgrammer</code> \u5C5E\u6027\u548C <code>setName</code> \u3001<code>program</code> \u65B9\u6CD5(\u51FD\u6570\u5BF9\u8C61\u7684\u5C5E\u6027\u4E0E\u539F\u578B\u5BF9\u8C61\u7684\u5C5E\u6027\u662F\u6709\u533A\u522B\u7684\uFF0C\u4F46\u4E0D\u5728\u672C\u6559\u7A0B\u7684\u8BA8\u8BBA\u8303\u56F4)\u3002</p><p>\u73B0\u5728\u6765\u770B\u770B\u5982\u4F55\u521B\u5EFA <code>Programmer</code> \u7684\u5B9E\u4F8B\u5E76\u8C03\u7528\u5176\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> zhangsan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Programmer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
zhangsan<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&#39;ZhangSan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>zhangsan<span class="token punctuation">.</span>isProgrammer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    zhangsan<span class="token punctuation">.</span><span class="token function">program</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u63A7\u5236\u53F0\u5C06\u6253\u5370\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ZhangSan codes in java.
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD9\u770B\u4E0A\u53BB\u5E76\u4E0D\u96BE\u3002\u90A3\u4E48\u5982\u679C\u6211\u4EEC\u60F3\u6A21\u62DF\u51FA\u201C\u5B50\u7C7B\u201D\u53CA\u201C\u7EE7\u627F\u201D\u7684\u6982\u5FF5\u5462\uFF1F\u6211\u60F3\u5148\u7ED9\u4F60\u770B\u4E00\u4E0B\u5B83\u7684\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">Geek</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Geek<span class="token punctuation">.</span>superclass<span class="token punctuation">.</span><span class="token function">constructor</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>niubility <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Geek</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Programmer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Geek<span class="token punctuation">.</span>superclass <span class="token operator">=</span> <span class="token class-name">Programmer</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>

<span class="token class-name">Geek</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">superSkill</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;kill himself.&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u6211\u4EEC\u5B9E\u73B0\u4E86 <code>Programmer</code> \u7684\u5B50\u7C7B <code>Geek</code> \u5E76\u4E3A\u5176\u6269\u5C55\u4E86 <code>niubility</code> \u5C5E\u6027\u548C <code>superSkill</code> \u65B9\u6CD5\u3002\u8FD9\u91CC\u5C06 <code>Geek</code> \u7684\u539F\u578B\u6307\u5411 <code>Programmer</code> \u7684\u4E00\u4E2A\u5B9E\u4F8B\uFF0C\u4EE5\u6B64\u6765\u83B7\u5F97 <code>Programmer</code> \u4E0A\u7684\u6240\u6709\u5C5E\u6027\u53CA\u65B9\u6CD5\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u6211\u4EEC\u8FD8\u5C06 <code>Geek</code> \u7684 <code>superclass</code> \u6307\u5411 <code>Programmer.prototype</code> \uFF0C\u8FD9\u4E48\u4E00\u6765\u4FBF\u53EF\u4EE5\u901A\u8FC7 <code>superclass</code> \u5F15\u7528\u8C03\u7528\u5E76\u7EE7\u627F\u7236\u7C7B\u65B9\u6CD5\u3002</p>`,14),v=n("\u5982\u679C\u4E0A\u9762\u7684\u4EE3\u7801\u5BF9\u4F60\u6765\u8BF4\u5E76\u4E0D\u5BB9\u6613\u7406\u89E3\uFF0C\u90A3\u4E48\u4F60\u53EF\u80FD\u9700\u8981\u8865\u5145\u4E00\u4E0B JavaScript \u7684\u57FA\u7840\u77E5\u8BC6\u3002\u867D\u7136 ExtJS \u4E3A\u6211\u4EEC\u9690\u85CF\u4E86\u8BF8\u591A\u5B9E\u73B0\u7EC6\u8282\uFF0C\u4F46\u82E5\u60F3\u6709\u6240\u63D0\u9AD8\u5E76\u4E86\u89E3 ExtJS \u7684\u5DE5\u4F5C\u539F\u7406\uFF0C\u51C6\u786E\u7406\u89E3\u4EE5\u4E0A\u4EE3\u7801\u662F\u6781\u4E3A\u5FC5\u8981\u7684\u3002\u66F4\u591A JavaScript \u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7684\u77E5\u8BC6\uFF0C\u6211\u63A8\u8350\u4F60\u9605\u8BFB "),x={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript",target:"_blank",rel:"noopener noreferrer"},w=n("MDN\u76F8\u5173\u6587\u6863"),h=n(" \u3002"),E=a(`<p>\u63A5\u4E0B\u6765\u6784\u9020\u4E00\u4E2A <code>Geek</code> \u5B9E\u4F8B\u5E76\u8C03\u7528\u5176\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> lisi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Geek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lisi<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&#39;LiSi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lisi<span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>lisi<span class="token punctuation">.</span>isProgrammer <span class="token operator">&amp;&amp;</span> lisi<span class="token punctuation">.</span>niubility<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lisi<span class="token punctuation">.</span><span class="token function">program</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lisi<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; can &#39;</span> <span class="token operator">+</span> lisi<span class="token punctuation">.</span><span class="token function">superSkill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u63A7\u5236\u53F0\u5C06\u6253\u5370\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>LiSi codes in JavaScript.
LiSi can kill himself.
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="extjs\u7684\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#extjs\u7684\u65B9\u5F0F" aria-hidden="true">#</a> ExtJS\u7684\u65B9\u5F0F</h2><p>\u4ECE\u4E0A\u4E00\u5C0F\u8282\u53EF\u4EE5\u770B\u51FA\uFF0C\u4F20\u7EDF\u7684\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u65B9\u5F0F\u7A0D\u6709\u4E9B\u590D\u6742\uFF0C\u800C\u4E14\u4EE3\u7801\u8F83\u4E3A\u5206\u6563\uFF0C\u7EE7\u627F\u5173\u7CFB\u4E5F\u4E0D\u76F4\u89C2\u3002ExtJS \u4E3A\u4E86\u514B\u670D\u6B64\u95EE\u9898\uFF0C\u5728 4.0+ \u7248\u672C\u4E2D\u5F15\u5165\u4E86\u5168\u65B0\u7684\u7C7B\u7CFB\u7EDF\u3002\u8BA9\u6211\u4EEC\u5148\u6765\u770B\u770B\u5982\u4F55\u7528 ExtJS \u7684\u65B9\u5F0F\u5B9E\u73B0\u4E0A\u4E00\u8282\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Programmer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">isProgrammer</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">&#39;java&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">setName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">program</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; codes in &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lang <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> zhangsan <span class="token operator">=</span> Ext<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;Programmer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
zhangsan<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&#39;ZhangSan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>zhangsan<span class="token punctuation">.</span>isProgrammer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    zhangsan<span class="token punctuation">.</span><span class="token function">program</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5B9E\u73B0\u7EE7\u627F\u5173\u7CFB\u4E5F\u975E\u5E38\u7B80\u5355\u76F4\u89C2\uFF0C\u6765\u770B\u5B50\u7C7B\u7684\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Geek&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token string">&#39;Programmer&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>niubility <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">superSkill</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;kill himself.&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> lisi <span class="token operator">=</span> Ext<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;Geek&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lisi<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&#39;LiSi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lisi<span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>lisi<span class="token punctuation">.</span>isProgrammer <span class="token operator">&amp;&amp;</span> lisi<span class="token punctuation">.</span>niubility<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lisi<span class="token punctuation">.</span><span class="token function">program</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lisi<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; can &#39;</span> <span class="token operator">+</span> lisi<span class="token punctuation">.</span><span class="token function">superSkill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u53EF\u4EE5\u770B\u51FA\uFF0CExtJS \u7C7B\u7CFB\u7EDF\u7684\u6838\u5FC3\u5373\u4E3A <strong>Ext.define</strong> \u51FD\u6570\uFF0C\u719F\u6089 Java \u7684\u5F00\u53D1\u4EBA\u5458\u53EF\u4EE5\u5C06\u5176\u7406\u89E3\u4E3A ExtJS \u7684\u5B9A\u4E49\u7C7B\u7684\u8BED\u6CD5\u3002\u7EE7\u627F\u5173\u7CFB\u5219\u53EF\u4EE5\u901A\u8FC7 extend \u5C5E\u6027\u6307\u5B9A\u3002\u4ECE 4.0+ \u7248\u672C\u5F00\u59CB\uFF0CExtJS \u6574\u4E2A\u6846\u67B6\u90FD\u57FA\u4E8E <code>Ext.define</code> \u6765\u6784\u5EFA\uFF0C\u9664\u4E86\u7EE7\u627F\u4EE5\u5916\uFF0C\u8BE5\u65B9\u6CD5\u8FD8\u5B9E\u73B0\u4E86\u5176\u5B83\u8BF8\u591A\u7C7B\u7CFB\u7EDF\u7279\u6027\uFF0C\u8BA9\u6211\u4EEC\u901A\u8FC7\u4EE3\u7801\u7684\u65B9\u5F0F\u5C55\u793A\u4E00\u4E0B <code>Ext.define</code> \u7684\u7528\u6CD5\u3002</p><h2 id="ext-define\u7684\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#ext-define\u7684\u7528\u6CD5" aria-hidden="true">#</a> Ext.define\u7684\u7528\u6CD5</h2><h3 id="_1-\u5B9A\u4E49\u4E00\u4E2A\u7C7B" tabindex="-1"><a class="header-anchor" href="#_1-\u5B9A\u4E49\u4E00\u4E2A\u7C7B" aria-hidden="true">#</a> 1.\u5B9A\u4E49\u4E00\u4E2A\u7C7B</h3><p>\u6B63\u5982\u524D\u9762\u770B\u5230\u7684\uFF0C<code>Ext.define</code> \u53EF\u4EE5\u7528\u6765\u5B9A\u4E49\u4E00\u4E2A\u7C7B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Programmer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">language</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>language<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>language <span class="token operator">=</span> language<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">language</span><span class="token operator">:</span> <span class="token string">&#39;[default]&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">code</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token string">&#39;I\\&#39;m coding in &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>language <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> zhangsan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Programmer</span><span class="token punctuation">(</span><span class="token string">&#39;Java&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zhangsan<span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// I&#39;m coding in Java. </span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_2-\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#_2-\u7EE7\u627F" aria-hidden="true">#</a> 2.\u7EE7\u627F</h3><p>\u8FD8\u6709\u7EE7\u627F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;JavaScripter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token string">&#39;Programmer&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">skilled</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>skilled <span class="token operator">=</span> skilled <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callParent</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">skill</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;I am good at &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skilled <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> lisi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JavaScripter</span><span class="token punctuation">(</span><span class="token string">&#39;ExtJS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lisi<span class="token punctuation">.</span><span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// I&#39;m coding in JavaScript.I am good at ExtJS. </span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u7EE7\u627F\u4F7F\u7528 <code>extend</code> \u5C5E\u6027\u5B9E\u73B0\uFF0C\u5728\u6784\u9020\u5668\u6216\u65B9\u6CD5\u4E2D\uFF0C\u901A\u8FC7 <code>this.callParent()</code> \u4EE5\u8C03\u7528\u7236\u7C7B\u65B9\u6CD5\u3002</p><h3 id="_3-config" tabindex="-1"><a class="header-anchor" href="#_3-config" aria-hidden="true">#</a> 3.Config</h3><p>\u5B9A\u4E49\u5728 <code>config</code> \u4E2D\u7684\u5C5E\u6027\u4F1A\u81EA\u52A8\u751F\u6210 getters/setters\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Programmer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">language</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">isGeek</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">hasMoney</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> zhangsan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Programmer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">language</span><span class="token operator">:</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isGeek</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zhangsan<span class="token punctuation">.</span><span class="token function">getLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zhangsan<span class="token punctuation">.</span><span class="token function">getHasMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zhangsan<span class="token punctuation">.</span>hasMoney<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>zhangsan<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u6267\u884C\u7ED3\u679C\u5982\u4E0B\uFF1A</p><p><img src="`+i+`" alt="./classsystem_01"></p><p>\u9700\u8981<em>\u6CE8\u610F</em>\u7684\u662F\uFF0C\u5982\u679C\u4E0D\u662F\u7EE7\u627F\u81EA\u73B0\u6709\u7EC4\u4EF6\uFF0C\u800C\u662F\u81EA\u5DF1\u5B9A\u4E49\u65B0\u7C7B\uFF0C\u9700\u8981\u5728 <code>constructor</code> \u4E2D\u660E\u786E\u8C03\u7528 <code>initConfig()</code> \u65B9\u6CD5\u3002</p><p>ExtJS \u6846\u67B6\u5E76\u6CA1\u6709\u5BF9 <code>isXxx</code> \u3001<code>hasXxx</code> \u65B9\u6CD5\u505A\u7279\u6B8A\u5904\u7406\uFF0C\u5373\u793A\u4F8B\u4E2D\u9ED8\u8BA4\u5E76<strong>\u4E0D\u5B58\u5728</strong> isGeek() \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u8BBF\u95EE <code>isGee</code> \u5C5E\u6027\u83B7\u5F97\u5176\u503C\u3002\u7136\u800C\uFF0C<code>isXxx</code> \u5C5E\u6027\u901A\u5E38\u66F4\u9002\u5408\u4F5C\u4E3A\u7C7B\u7684\u6210\u5458\u5BF9\u8C61(\u5C5E\u6027)\uFF0C\u4E0D\u9700\u653E\u5165config\u4E2D\u3002</p><p>\u5BF9\u4E8E <code>config</code> \u4E2D\u7684\u5C5E\u6027 <code>foo</code>, \u6846\u67B6\u8FD8\u4F1A\u4E3A\u5176\u81EA\u52A8\u751F\u6210 <code>applyFoo()</code> \u548C <code>updateFoo()</code> \u65B9\u6CD5\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u5206\u522B\u4F5C\u4E3A <code>setFoo()</code> \u7684\u524D\u7F6E\u548C\u540E\u7F6E\u65B9\u6CD5\u88AB\u8C03\u7528\uFF0C\u5177\u4F53\u4F7F\u7528\u8BF4\u660E\u53EF\u53C2\u8003\u76F8\u5E94API\u6587\u6863\u3002</p><h3 id="_4-statics-\u548C-inheritablestatics" tabindex="-1"><a class="header-anchor" href="#_4-statics-\u548C-inheritablestatics" aria-hidden="true">#</a> 4.Statics \u548C InheritableStatics</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Computer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">statics</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">factory</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">brand</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \`this\` \u6307\u5411\u7C7B\u672C\u8EAB</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">this</span><span class="token punctuation">(</span>brand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">brand</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>\uFF0C
    <span class="token function-variable function">foo</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \`this.statics()\` \u53EF\u4EE5\u5F15\u7528\u5230\u5F53\u524D\u7C7B</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> thinkComputer <span class="token operator">=</span> Computer<span class="token punctuation">.</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token string">&#39;Thinkpad&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thinkComputer<span class="token punctuation">.</span>brand<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Thinkpad </span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5173\u4E8E\u9759\u6001\u65B9\u6CD5\uFF0C\u4F60\u9700\u8981\u77E5\u9053\uFF1A</p><ol><li>\u5728statics\u65B9\u6CD5\u4E2D\uFF0C<code>this</code> \u6307\u5411\u7C7B\u672C\u8EAB;</li><li>\u5728\u5176\u5B83\u6210\u5458\u65B9\u6CD5\u4E2D\uFF0C<code>this.statics()</code> \u53EF\u4EE5\u5F15\u7528\u5230\u5F53\u524D\u7C7B\uFF1B</li><li>statics\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027/\u65B9\u6CD5\uFF0C\u4E0D\u4F1A\u88AB <code>extend</code> \u6216 <code>mixin</code>\uFF0C\u5982\u6709\u6B64\u9700\u6C42\uFF0C\u53EF\u4F7F\u7528 <code>InheritableStatics</code> .</li></ol><h3 id="_5-mixins" tabindex="-1"><a class="header-anchor" href="#_5-mixins" aria-hidden="true">#</a> 5.Mixins</h3><p>ExtJS \u63D0\u4F9B\u4E86\u63BA\u548C\u6A21\u5F0F\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;CanSing&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">sing</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;I&#39;m on the highway to hell...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Musician&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">mixins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;CanSing&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">eat</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Everyone is able to eat.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">new</span> <span class="token class-name">Musician</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Everyone is able to eat.</span>
<span class="token keyword">new</span> <span class="token class-name">Musician</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// I&#39;m on the highway to hell...</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u4F60\u5E94\u8BE5\u901A\u8FC7\u63BA\u548C\u6A21\u5F0F\u5408\u7406\u7684\u62C6\u5206\u4E00\u4E9B\u8F83\u5927\u7684\u7C7B\uFF0C\u5C06\u5176\u4E2D\u53EF\u5171\u7528\u7684\u884C\u4E3A\u65B9\u6CD5\u62C6\u5206\u51FA\u53BB\u3002\u4F8B\u5982\u4F60\u5728\u8BBE\u8BA1\u4E00\u4E2AWeb\u754C\u9762\u6A21\u677F\u7C7B\uFF0C\u5B83\u53EF\u4EE5\u4FDD\u5B58\u65B0\u6570\u636E\uFF0C\u4E5F\u53EF\u4EE5\u5220\u9664\u5DF2\u6709\u6570\u636E\uFF0C\u53E6\u5916\u8FD8\u6709\u53EF\u80FD\u4F1A\u5305\u542B\u6570\u636E\u4FEE\u6539\u3001\u6570\u636E\u5BFC\u5165\u5BFC\u51FA\u3001\u67E5\u8BE2\u68C0\u7D22\u7B49\u7B49\u4E00\u7CFB\u5217\u64CD\u4F5C\u3002\u4F60\u5F53\u7136\u53EF\u4EE5\u8BBE\u8BA1\u4E00\u4E2A\u5927\u800C\u5168\u7684\u7C7B\u6765\u5B9E\u73B0\u6240\u6709\u529F\u80FD\uFF0C\u5982\u679C\u67D0\u4E00\u7279\u6B8A\u573A\u666F\u4E2D\u4E0D\u9700\u8981\u201C\u5BFC\u5165\u5BFC\u51FA\u201D\u529F\u80FD\u5219\u901A\u8FC7\u5B50\u7C7B\u5C06\u5BF9\u5E94\u529F\u80FD\u5165\u53E3\u201C\u5F31\u5316\u201D\u6389\u3002\u8FD9\u4E2A\u8BBE\u8BA1\u5F88\u7CDF\u7CD5\uFF0C\u7EF4\u62A4\u8FD9\u4E2A\u5927\u7C7B\u4F1A\u8BA9\u4EBA\u75AF\u72C2\uFF0C\u5C24\u5176\u9762\u5BF9\u65B0\u7684\u529F\u80FD\u6269\u5C55\u65F6\u3002</p><p>\u806A\u660E\u4E00\u4E9B\u7684\u529E\u6CD5\u5219\u53EF\u4EE5\u901A\u8FC7\u7EE7\u627F\u5C42\u7EA7\u5212\u5206\uFF0C\u5728\u57FA\u7C7B\u4E2D\u5B9E\u73B0\u201C\u57FA\u672C\u529F\u80FD\u201D\u5E76\u5728\u5B50\u7C7B\u4E2D\u6269\u5C55\u5176\u5B83\u529F\u80FD\u3002\u7136\u800C\u6211\u4EEC\u7684\u4F8B\u5B50\u4E2D\u5982\u4F55\u5212\u5206\u5B50\u7C7B\u5462\uFF1F\u5B83\u6709\u592A\u591A\u53EF\u80FD\u7684\u529F\u80FD\u7EC4\u5408\u3002\u4F60\u80AF\u5B9A\u5DF2\u7ECF\u60F3\u5230\uFF0C\u63BA\u548C\u6A21\u5F0F\u53EF\u4EE5\u89E3\u51B3\u6B64\u7C7B\u95EE\u9898\u3002</p><p><code>mixins</code> \u80CC\u540E\u7684\u601D\u60F3\u5373\u662F\u901A\u8FC7<strong>\u805A\u5408</strong>\u800C\u975E\u7EE7\u627F\u7684\u65B9\u5F0F\u4E3A\u67D0\u7C7B\u578B\u6269\u5C55\u884C\u4E3A\u80FD\u529B\u3002 Java \u5F00\u53D1\u4EBA\u5458\u7406\u5E94\u5BF9\u6B64\u6781\u4E3A\u719F\u6089\u3002\u4F7F\u7528 Golang \u7684\u5F00\u53D1\u4EBA\u5458\u53EF\u4EE5\u5C06\u5176\u7406\u89E3\u4E3A\u7ED3\u6784\u4F53\u7684\u5D4C\u5165\u3002</p><p>\u4E0B\u9762\u5C55\u793A\u4E00\u4E2A\u7A0D\u590D\u6742\u7684\u4F8B\u5B50\uFF0C\u66F4\u591A\u7684\u7528\u6CD5\u5E0C\u671B\u4F60\u901A\u8FC7API\u6587\u6863\u81EA\u884C\u5B66\u4E60\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Jqueryable&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token string">&#39;jQuery&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Extjsable&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">skill</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;ExtJS&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Seajsable&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token string">&#39;Seajs&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;JavaScripter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token string">&#39;Programmer&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">skilled</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>skilled <span class="token operator">=</span> skilled <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callParent</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    
    <span class="token literal-property property">mixins</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">writejQuery</span><span class="token operator">:</span> <span class="token string">&#39;Jqueryable&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">writeExtjs</span><span class="token operator">:</span> <span class="token string">&#39;Extjsable&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">writeSeajs</span><span class="token operator">:</span> <span class="token string">&#39;Seajsable&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function-variable function">skill</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;I am good at &#39;</span><span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mixins<span class="token punctuation">.</span>writejQuery<span class="token punctuation">.</span>skill<span class="token punctuation">,</span>
            <span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mixins<span class="token punctuation">.</span>writeExtjs<span class="token punctuation">.</span><span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mixins<span class="token punctuation">.</span>writeSeajs<span class="token punctuation">.</span>cmd<span class="token punctuation">,</span>
            <span class="token string">&#39;.&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> lisi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JavaScripter</span><span class="token punctuation">(</span><span class="token string">&#39;ExtJS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lisi<span class="token punctuation">.</span><span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// I&#39;m coding in JavaScript.I am good at jQuery,ExtJS,Seajs.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h3 id="_6-\u4FDD\u7559\u79C1\u6709\u4F5C\u7528\u57DF\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#_6-\u4FDD\u7559\u79C1\u6709\u4F5C\u7528\u57DF\u7A7A\u95F4" aria-hidden="true">#</a> 6.\u4FDD\u7559\u79C1\u6709\u4F5C\u7528\u57DF\u7A7A\u95F4</h3><p>\u63A5\u4E0B\u6765\u8981\u5C55\u793A\u7684\u4EE3\u7801\u4F60\u5E94\u8BE5\u4E00\u770B\u5C31\u660E\u767D\u5B83\u7684\u7528\u610F\u4E3A\u4F55\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Foo&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// nested scope</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token comment">// properties</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7C7B\u4F3C\u7684\u4EE3\u7801\u7ED3\u6784\u5728\u4F7F\u7528 ExtJS \u4E4B\u524D\uFF0C\u4F60\u5DF2\u7ECF\u65E0\u6570\u6B21\u4F7F\u7528\u4E86\u3002\u901A\u8FC7\u7ED9 <code>Ext.define</code> \u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F20\u51FD\u6570\u53C2\u6570\u7684\u65B9\u5F0F\uFF0C\u53EF\u4EE5\u5728\u51FD\u6570\u4E2D\u4FDD\u7559\u79C1\u6709\u4F5C\u7528\u57DF\u7A7A\u95F4\u3002\u5982\u679C\u8FD4\u56DE\u5BF9\u8C61\u7684\u5C5E\u6027\u4E2D\u5305\u542Boverride\u7B49\u9700\u8981\u9884\u5904\u7406\u7684\u7C7B\uFF0C\u5FC5\u987B\u5C06\u4E0A\u9762\u7684\u51FD\u6570\u6539\u4E3A\u7ACB\u5373\u6267\u884C\u7684\u65B9\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Foo&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// nested scope</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">override</span><span class="token operator">:</span> <span class="token string">&#39;Ext.Component&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">// properties</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u552F\u4E00\u9700\u8981\u518D\u6B21\u597D\u5FC3\u53EE\u5631\u4F60\u7684\u662F\uFF0C\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u4E00\u5B9A\u8981\u6CE8\u610F\u4FDD\u8BC1\u51FD\u6570\u9020\u6210\u7684\u95ED\u5305\u7A7A\u95F4\u4E2D\uFF0C\u5F15\u7528\u5230\u7684\u4EFB\u4F55\u53D8\u91CF\u4E00\u5B9A\u8981\u80FD\u591F\u5728\u5408\u9002\u7684\u65F6\u673A\u88ABGC\u5904\u7406\u3002</p><p>\u6765\u770B\u4E00\u4E2A\u8BE5\u7528\u6CD5\u7684\u793A\u4F8B(\u6CE8\u610F\u51FD\u6570\u4E2D\u4F20\u5165\u4E86\u53C2\u6570)\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Bar&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">statics</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token function-variable function">nextId</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token operator">++</span>bar<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// properties</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Bar<span class="token punctuation">.</span><span class="token function">nextId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Bar<span class="token punctuation">.</span><span class="token function">nextId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2 </span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_7-\u5B9A\u4E49\u533F\u540D\u7C7B" tabindex="-1"><a class="header-anchor" href="#_7-\u5B9A\u4E49\u533F\u540D\u7C7B" aria-hidden="true">#</a> 7.\u5B9A\u4E49\u533F\u540D\u7C7B</h3><p>\u53EF\u80FD\u6CA1\u592A\u5927\u7528\u5904\uFF0C<code>Ext.define</code> \u53EF\u4EE5\u7528\u6765\u5B9A\u4E49\u533F\u540D\u7C7B\uFF0C\u5C06\u7C7B\u540D\u8BBE\u4E3A <code>null</code> \u5373\u53EF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Foo <span class="token operator">=</span> Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;[ anonymous class ]&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ anonymous class ] </span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_8-\u5355\u4F8B\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_8-\u5355\u4F8B\u6A21\u5F0F" aria-hidden="true">#</a> 8.\u5355\u4F8B\u6A21\u5F0F</h3><p>\u53EA\u9700\u5C06 <code>singleton</code> \u5C5E\u6027\u8BBE\u7F6E\u4E3A <code>true</code> \u5373\u53EF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Logger&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">singleton</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">log</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_9-\u8986\u76D6" tabindex="-1"><a class="header-anchor" href="#_9-\u8986\u76D6" aria-hidden="true">#</a> 9.\u8986\u76D6</h3><p>\u901A\u8FC7 <code>override</code> \u5C5E\u6027\u53EF\u4EE5\u66FF\u6362\u6389\u7236\u7C7B\u7684\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4E3A\u5176\u589E\u52A0\u65B0\u65B9\u6CD5(\u8BE6\u7EC6\u7684\u7528\u6CD5\u8BF7\u53C2\u8003API\u6587\u6863\uFF0C\u6BD5\u7ADF\u672C\u6559\u7A0B\u5E76\u975E\u4E3A\u4E86\u4ECB\u7ECDAPI\u6587\u6863\u800C\u4F5C)\u3002\u503C\u5F97\u4E00\u63D0\u7684\u662F\uFF0C\u5B83\u6709\u4E00\u4E9B\u5F88\u5B9E\u7528\u7684\u573A\u666F\uFF0C\u4F8B\u5982\uFF0C\u62C6\u5206\u5DE8\u5927\u7684\u7C7B \uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728\u5B9A\u4E49\u5DE8\u5927\u7684\u7C7B\u65F6\uFF0C\u53EF\u4EE5\u53EA\u5B9A\u4E49\u4E00\u4E9B\u57FA\u7840\u5C5E\u6027config\u3001statics</span>
<span class="token comment">// \u4EE5\u53CA\u4E00\u4E9B\u57FA\u7840\u7684\u6210\u5458\u65B9\u6CD5\u7B49</span>
Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;MyLargeClass&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5C06MyLargeClass\u7684\u65B9\u6CD5\u5206\u7C7B\uFF0C\u4E00\u90E8\u5206\u65B9\u6CD5\u653E\u5230part1\u4E2D</span>
Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;MyLargeClass.part1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">override</span><span class="token operator">:</span> <span class="token string">&#39;MyLargeClass&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">constructor</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callParent</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">jump</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; jumps!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">code</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; is coding in javascript!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53E6\u4E00\u90E8\u5206\u65B9\u6CD5\u653E\u5230part2\u4E2D</span>
Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;MyLargeClass.part2&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">override</span><span class="token operator">:</span> <span class="token string">&#39;MyLargeClass&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sing</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; sings a song!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u4E00\u822C\u60C5\u51B5\u4E0B\u5E94\u8BE5\u907F\u514D\u50CFcode\u65B9\u6CD5\u8FD9\u79CD\u591A\u6B21\u8986\u76D6\u7684\u73B0\u8C61</span>
    <span class="token function-variable function">code</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; is coding in java!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> largeClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyLargeClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ZhangSan&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
largeClass<span class="token punctuation">.</span><span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ZhangSan jumps!</span>
largeClass<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ZhangSan sings a song!</span>
largeClass<span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ZhangSan is coding in java! </span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u5B9E\u9645\u5E94\u7528\u65F6\uFF0C\u5F53\u4E00\u4E2A\u7C7B\u65B9\u6CD5\u7279\u522B\u7279\u522B\u7279\u522B\u591A\u65F6(\u5DE8\u5927\u7684\u7C7B)\uFF0C\u53EF\u4EE5\u8FDB\u884C\u5408\u7406\u62C6\u5206\u3002\u540C\u65F6\uFF0C\u7ED3\u5408\u52A8\u6001\u7C7B\u52A0\u8F7D\u673A\u5236\uFF0C\u5C06\u4E0D\u540C\u7684\u90E8\u5206part1\u3001part2\u653E\u5728\u4E0D\u540C\u7684JS\u6E90\u6587\u4EF6\u4E2D\uFF0C\u4E3B\u7C7B\u5B9A\u4E49\u4E2D\u4F7F\u7528 <code>requires</code> \u5F15\u7528\u6240\u6709\u7684\u90E8\u5206\u3002</p><p><code>Ext.define</code> \u8FD8\u63D0\u4F9B\u4E86\u5B9A\u4E49\u522B\u540D\u3001\u52A8\u6001\u52A0\u8F7D\u3001\u5B9A\u4E49\u5411\u4E0B\u517C\u5BB9\u7684\u7C7B\u540D\u7B49\u591A\u79CD\u529F\u80FD\u7528\u6CD5\uFF0C\u4E0D\u518D\u4E00\u4E00\u53D9\u8FF0\u3002</p><h2 id="\u6DF1\u5165\u4E00\u4E9B" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5165\u4E00\u4E9B" aria-hidden="true">#</a> \u6DF1\u5165\u4E00\u4E9B</h2><p>ExtJS \u7C7B\u7CFB\u7EDF\u63D0\u4F9B\u4E86\u8FD9\u4E48\u591A\u82B1\u54E8\u7684\u529F\u80FD\uFF0C\u600E\u4E48\u5B9E\u73B0\u7684\u5462\uFF1F\u4E0B\u9762\u7684\u5185\u5BB9\u6211\u5C06\u5E26\u7740\u4F60\u4E00\u6B65\u4E00\u6B65\u6DF1\u5165\u5B66\u4E60 ExtJS \u7C7B\u7CFB\u7EDF\u7684\u5B9E\u73B0\u8FC7\u7A0B\u3002</p><p>ExtJS \u5728\u5B9A\u4E49\u7C7B\u7684\u65F6\u5019\uFF0C\u57FA\u672C\u601D\u8DEF\u4E3A\uFF1A</p><ol><li>\u63D0\u4F9B\u4E00\u4E2A\u57FA\u7C7B <code>Ext.Base</code>\uFF0C\u6240\u6709\u7C7B\u7EE7\u627F\u81EA\u6B64\uFF0C\u5728\u6B64\u7C7B\u4E2D\u5B9A\u4E49\u6240\u6709\u7C7B\u5171\u6709\u7684\u5C5E\u6027(function\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u4EA6\u5373\u6240\u8C13\u9759\u6001\u5C5E\u6027)\uFF1B</li><li>\u63D0\u4F9B <code>Ext.Class</code> \u7C7B\uFF0C\u5B8C\u6210\u7C7B\u5B9A\u4E49\u540E\u7684\u524D\u7F6E\u5904\u7406\uFF1B</li><li>\u63D0\u4F9B <code>Ext.ClassManager</code> \u5355\u4F8B\uFF0C\u8D1F\u8D23\u7BA1\u7406\u6846\u67B6\u5185\u7684\u7C7B\u3002Ext.define\u65B9\u6CD5\u7684\u5B9E\u9645\u5B9E\u73B0\u4E5F\u6E90\u4E8E\u6B64\uFF0C\u540C\u65F6\u5B9E\u9645\u7684\u540E\u7F6E\u5904\u7406\u65B9\u6CD5\u4E5F\u5728\u6B64\u5B9E\u73B0\uFF1B</li><li>\u63D0\u4F9B <code>Ext.Loader</code> \u5355\u4F8B\uFF0C\u8D1F\u8D23\u7C7B\u7684\u52A8\u6001\u52A0\u8F7D\u3002\u540C\u65F6\uFF0C\u52A0\u8F7D\u76F8\u5173\u7684\u524D\u7F6E\u5904\u7406\u65B9\u6CD5\u5728\u6B64\u5B9E\u73B0\u3002</li></ol><p>\u52A8\u6001\u52A0\u8F7D\u7684\u5185\u5BB9\u5C06\u5355\u72EC\u8BB2\u89E3\uFF0C\u4E0D\u5728\u6B64\u8BA8\u8BBA\u3002</p><p>\u6211\u5265\u79BB\u51FA\u5B9E\u73B0\u7C7B\u5B9A\u4E49\u7684<strong>\u9AA8\u5E72\u4EE3\u7801</strong>\uFF0C\u5148\u6765\u770B\u770B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Ext <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">mkCtor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Ext<span class="token punctuation">.</span><span class="token function-variable function">Class</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Class<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span>ClassManager <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">create</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">className</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> ctor <span class="token operator">=</span> <span class="token function">mkCtor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Ext<span class="token punctuation">.</span>Class</span><span class="token punctuation">(</span>ctor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span><span class="token function-variable function">define</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u63A7\u5236\u53F0\u5C06\u6253\u5370\u51FA\uFF1A</p><p><img src="`+r+`" alt="./classsystem_02"></p><p>\u4ECE\u4EE3\u7801\u4E2D\u53EF\u4EE5\u770B\u51FA\uFF0C <code>Ext.define</code> \u901A\u8FC7\u8C03\u7528 <code>Ext.ClassManager.create</code> \u65B9\u6CD5\uFF0C\u5B9E\u9645\u751F\u6210\u7684\u662F <code>Ext.Class</code> \u7684\u5B9E\u4F8B\uFF0C\u5373 <code>new Ext.Class(ctor);</code>\u3002\u800C\u6839\u636E <code>new</code> \u64CD\u4F5C\u7B26\u7684\u7279\u6027\uFF0C\u5F53\u521B\u5EFA Ext.Class \u65F6\u5B9E\u9645\u521B\u5EFA\u7684\u5C06\u662F\u4F20\u5165\u7684\u51FD\u6570\u5BF9\u8C61\uFF0C\u5373\u6267\u884C <code>makeCtor()</code> \u540E\u751F\u6210\u7684 <strong>constructor</strong> \u51FD\u6570\u5BF9\u8C61\u3002</p><p>\u4E8E\u662F\u53EF\u4EE5\u77E5\u9053\uFF0CExtJS \u7C7B\u7CFB\u7EDF\u5B9E\u8D28\u4E0A\u521B\u5EFA\u7684\u90FD\u662F <code>makeCtor</code> \u51FD\u6570\u4E2D\u7684 <code>constructor</code> \u5BF9\u8C61\uFF0C\u5176\u5185\u90E8\u53EA\u662F\u7EE7\u7EED\u8C03\u7528\u5F53\u524D(this)\u914D\u7F6E\u4E2D\u7684 constructor \u5C5E\u6027\u6240\u6307\u5411\u7684\u51FD\u6570\uFF0C\u8FD9\u4E48\u505A\u7684\u597D\u5904\u4FBF\u662F\uFF1A\u6240\u5F97\u5230\u7684 constructor \u7684\u539F\u751F\u94FE\u975E\u5E38\u5E72\u51C0\uFF0C\u6CA1\u6709\u5176\u5B83\u591A\u4F59\u7684\u5C5E\u6027\uFF0C\u540C\u65F6\u4FBF\u4E8E\u5728\u8FD9\u4E00\u8FC7\u7A0B\u4E2D\u4E3A\u751F\u6210\u7684\u5BF9\u8C61\u589E\u52A0\u5C5E\u6027\u3001\u505A\u9884\u5904\u7406\u7B49\u3002</p><p>\u660E\u767D\u4E86\u4EE5\u4E0A\u57FA\u7840\u4EE3\u7801\u7ED3\u6784\uFF0C\u73B0\u5728\u6765\u52A0\u4E2A <code>Ext.Base</code> \u7C7B\uFF0C\u540C\u65F6\u6211\u4EEC\u5B9E\u73B0\u4E00\u4E2A\u6781\u5EA6\u7B80\u5316\u7248\u7684 <code>addMembers</code> \u65B9\u6CD5(\u8BE5\u65B9\u6CD5\u7684\u4F7F\u7528\u8BF4\u660E\u53C2\u89C1API\u6587\u6863)\u548C\u79C1\u6709\u5C5E\u6027 <code>$isClass</code> \uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function-variable function">Base</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>Base<span class="token punctuation">.</span>$isClass <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>Base<span class="token punctuation">.</span><span class="token function-variable function">addMembers</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">members</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i<span class="token punctuation">,</span> member<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> members<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>members<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            member <span class="token operator">=</span> members<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> member<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u63A5\u4E0B\u6765\u6539\u9020\u4E00\u4E0B <code>Ext.Class</code> \uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function-variable function">Class</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Class<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> name<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>name <span class="token keyword">in</span> Ext<span class="token punctuation">.</span>Base<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Ext<span class="token punctuation">.</span>Base<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Class<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> Ext<span class="token punctuation">.</span>Base<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Class<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6267\u884C\u4EE3\u7801\uFF0C\u63A7\u5236\u53F0\u5C06\u6253\u5370\u51FA\uFF1A</p><p><img src="`+k+`" alt="./classsystem_03"></p><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u7684 <code>Foo</code> \u7C7B\u5DF2\u7ECF\u83B7\u53D6\u5230 <code>Ext.Base</code> \u4E2D\u7684\u65B9\u6CD5\u4E86\u3002\u6539\u53D8\u6253\u5370\u8F93\u51FA\u4EE3\u7801\uFF0C\u6765\u7528\u4E00\u4E0B\u65B0\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Foo <span class="token operator">=</span> Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Foo<span class="token punctuation">.</span><span class="token function">addMembers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo name&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">foo</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I\\&#39;m foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u7ED3\u679C\u5982\u4E0B\uFF0C\u6211\u4EEC\u6210\u529F\u5730\u7ED9 <code>Foo</code> \u589E\u52A0\u4E86\u539F\u578B\u65B9\u6CD5\uFF1A</p><p><img src="`+b+`" alt="./classsystem_04"></p><p>\u73B0\u5728\u628A <code>addMembers</code> \u653E\u5230\u6211\u4EEC\u7684\u6846\u67B6\u4EE3\u7801\u5185\u90E8\u8C03\u7528\uFF0C\u5E76\u589E\u52A0 <code>$className</code> \u5C5E\u6027\uFF0C\u4EE5\u6B64\u8868\u793A\u6211\u4EEC\u5DF2\u7ECF\u6709\u80FD\u529B\u6309\u9700\u8981\u6269\u5C55\u6240\u5B9A\u4E49\u7684\u7C7B\u7684\u5C5E\u6027\uFF0C\u4E8E\u662F\u5F97\u5230\u5982\u4E0B<strong>\u76F8\u5BF9\u5B8C\u6574\u7684\u4EE3\u7801</strong> \uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Ext <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">mkCtor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Ext<span class="token punctuation">.</span><span class="token function-variable function">Base</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>Base<span class="token punctuation">.</span>$isClass <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>Base<span class="token punctuation">.</span><span class="token function-variable function">addMembers</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">members</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i<span class="token punctuation">,</span> member<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> members<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>members<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            member <span class="token operator">=</span> members<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> member<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span><span class="token function-variable function">Class</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Class<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> name<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>name <span class="token keyword">in</span> Ext<span class="token punctuation">.</span>Base<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Ext<span class="token punctuation">.</span>Base<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Class<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> Ext<span class="token punctuation">.</span>Base<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    Class<span class="token punctuation">.</span><span class="token function">addMembers</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//  &lt;-----------</span>
    <span class="token keyword">return</span> Class<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span>ClassManager <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">create</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">className<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> ctor <span class="token operator">=</span> <span class="token function">mkCtor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        data <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>$className <span class="token operator">=</span> className<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//  &lt;-----------</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Ext<span class="token punctuation">.</span>Class</span><span class="token punctuation">(</span>ctor<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span><span class="token function-variable function">define</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Foo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo name&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">foo</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I\\&#39;m foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><p>\u7ED3\u679C\u5982\u6211\u4EEC\u6240\u613F\uFF1A</p><p><img src="`+m+`" alt="./classsystem_05"></p><h3 id="\u9884\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u9884\u5904\u7406\u5668" aria-hidden="true">#</a> \u9884\u5904\u7406\u5668</h3><p>\u73B0\u5728\u6211\u4EEC\u5DF2\u7ECF\u6709\u4E86 ExtJS \u7C7B\u7CFB\u7EDF\u57FA\u672C\u7684\u4EE3\u7801\u7ED3\u6784\uFF0C\u5E76\u80FD\u4E3A\u751F\u6210\u7684\u7C7B\u63D0\u4F9B\u9644\u52A0\u7684\u5C5E\u6027\u3002\u90A3\u4E48\uFF0C<code>Ext.define</code> \u4E2D\u8BF8\u591A\u7684\u529F\u80FD\u7279\u6027\u53C8\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u5462\uFF0C\u4F8B\u5982 <code>extend</code> \u3001<code>statics</code>\u3001<code>mixins</code> \u7B49\uFF1F\u7B54\u6848\u5C31\u662F\uFF1A\u9884\u5904\u7406\u5668\u3002</p><p>ExtJS \u7684\u9884\u5904\u7406\u5668\u5206\u4E3A <strong>\u524D\u7F6E\u5904\u7406\u5668</strong> (\u5728\u7C7B\u6784\u9020\u524D\u505A\u4E00\u4E9B\u4E8B\u60C5)\u548C <strong>\u540E\u7F6E\u5904\u7406\u5668</strong> (\u5728\u7C7B\u6784\u9020\u6210\u529F\u540E\u6B63\u5F0F\u4F7F\u7528\u524D\u505A\u4E00\u4E9B\u4E8B\u60C5)\u3002\u524D\u7F6E\u5904\u7406\u5668\u653E\u5728 <code>Ext.Class</code> \u5BF9\u8C61\u4E2D\uFF0C\u540E\u7F6E\u5904\u7406\u5668\u653E\u5728 <code>Ext.ClassManager</code> \u5BF9\u8C61\u4E2D\u3002\u5982\u679C\u4F60\u719F\u6089 Nodejs \u7684 Express \u6846\u67B6\u6216\u662F Python \u7684 django \u6846\u67B6\uFF0CExtJS \u9884\u5904\u7406\u5668\u7684\u8BBE\u8BA1\u7406\u5FF5\u5BF9\u4F60\u6765\u8BF4 so easy, \u6765\u770B\u770B\u5427\u3002</p><p>\u6211\u4EEC\u5148\u6765\u81EA\u5DF1\u5B9E\u73B0\u5B83\u3002\u9884\u5904\u7406\u5668\u81F3\u5C11\u9700\u8981\u4E09\u90E8\u5206\u7EC4\u6210\uFF1A</p><ol><li>\u76DB\u653E\u5904\u7406\u5668\u7684\u5BB9\u5668</li><li>\u6CE8\u518C\u5904\u7406\u5668\u7684\u65B9\u6CD5</li><li>\u6267\u884C\u5904\u7406\u5668\u5177\u4F53\u5904\u7406\u8FC7\u7A0B\u7684\u65B9\u6CD5</li></ol><p>\u5148\u6765\u89E3\u51B3\u7B2C\u4E00\u4E2A\u95EE\u9898\uFF1A\u6211\u4EEC\u7528\u6570\u7EC4 <code>[]</code> \u8868\u793A\u5BB9\u5668\uFF0C\u7528\u5F62\u5982 <code>{name: &#39;\u5904\u7406\u5668\u540D\u79F0&#39;, fn: \u6267\u884C\u7684\u5904\u7406\u65B9\u6CD5}</code> \u7684\u5BF9\u8C61\u8868\u793A\u4E00\u4E2A\u5904\u7406\u5668\u3002\u5BB9\u5668\u5C31\u5206\u522B\u53EB\u505A <code>preprocessors</code> \u548C <code>postprocessors</code> \u5427\u3002\u4E4B\u540E\uFF0C\u6CE8\u518C\u65B9\u6CD5\u5C31\u5BF9\u5E94\u5730\u53EB\u505A <code>registerPreprocessor</code> \u548C <code>registerPostprocessor</code> ; \u6267\u884C\u65B9\u6CD5\u53EB <code>doPreprocessor</code> \u548C <code>doPostprocessor</code> \u3002</p><p>\u6211\u8BF4\u4E86\u8FD9\u4E48\u591A\u5E9F\u8BDD\uFF0C\u4F60\u4E00\u770B\u524D\u7F6E\u5904\u7406\u5668\u7684\u9AA8\u5E72\u4EE3\u7801\uFF0C\u53D1\u73B0\u201C\u539F\u6765\u5982\u6B64\u7B80\u5355\u201D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span>preprocessors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function-variable function">registerPreprocessor</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span>preprocessors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> name<span class="token punctuation">,</span>
        <span class="token literal-property property">fn</span><span class="token operator">:</span> fn
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function-variable function">doPreprocessor</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i<span class="token punctuation">,</span> len<span class="token punctuation">,</span>
        pre <span class="token operator">=</span> Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span>preprocessors<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> pre<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pre<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Ext<span class="token punctuation">.</span>Class<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6211\u4EEC\u5728 <code>ExtClass</code> \u4E2D\u52A0\u4E2A <code>preprocessors</code> \u6570\u7EC4\uFF0C\u6CE8\u518C\u65B9\u6CD5\u662F\u5F80\u6570\u7EC4\u91CC\u653E\u5904\u7406\u5668\uFF0C\u6267\u884C\u65B9\u6CD5\u5219\u662F\u628A\u6570\u7EC4\u91CC\u7684\u6240\u6709\u5904\u7406\u5668\u53D6\u51FA\u6765\u8C03\u7528\u4E00\u4E0B\u3002\u5C31\u662F\u8FD9\u4E48\u7B80\u5355\uFF01\u5BF9\u5E94\u7684\u540E\u7F6E\u5904\u7406\u5668\u5B8C\u5168\u76F8\u540C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span>postprocessors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span><span class="token function-variable function">registerPostprocessor</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span>postprocessors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> name<span class="token punctuation">,</span>
        <span class="token literal-property property">fn</span><span class="token operator">:</span> fn
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>  
Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span><span class="token function-variable function">doPostprocessor</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i<span class="token punctuation">,</span> len<span class="token punctuation">,</span>
        post <span class="token operator">=</span> Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span>postprocessors<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> post<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        post<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Ext<span class="token punctuation">.</span>Class<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5904\u7406\u5668\u6709\u4E86\uFF0C\u8C03\u7528\u4E00\u4E0B\u5427\u3002\u73B0\u5728\u6539\u9020 <code>Ext.Class</code> \uFF0C\u628A\u5DF2\u6709\u7684\u4EE3\u7801\u79FB\u5230 <code>create</code> \u65B9\u6CD5\u4E2D\uFF0C\u5E76\u4E3A\u5176\u589E\u52A0 <code>onCreated</code> \u53C2\u6570\uFF0C\u4EE5\u4FBF\u56DE\u8C03\u540E\u7F6E\u5904\u7406\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function-variable function">Class</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Class<span class="token punctuation">,</span> data<span class="token punctuation">,</span> onCreated</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Class<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function">doPreprocessor</span><span class="token punctuation">(</span>Class<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// &lt;----------</span>
    Class<span class="token punctuation">.</span><span class="token function">addMembers</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">onCreated</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Class<span class="token punctuation">,</span> Class<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">// &lt;----------</span>
    <span class="token keyword">return</span> Class<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Class<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> name<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>name <span class="token keyword">in</span> Ext<span class="token punctuation">.</span>Base<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Ext<span class="token punctuation">.</span>Base<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Class<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> Ext<span class="token punctuation">.</span>Base<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u76F8\u5E94\u5730\uFF0C\u52A0\u4E0A\u540E\u7F6E\u56DE\u8C03\u51FD\u6570\u5E76\u5728\u5176\u4E2D\u8C03\u7528\u540E\u7F6E\u5904\u7406\u5668\u7684\u6267\u884C\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span><span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">className<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> ctor <span class="token operator">=</span> <span class="token function">mkCtor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    data <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>$className <span class="token operator">=</span> className<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Ext<span class="token punctuation">.</span>Class</span><span class="token punctuation">(</span>ctor<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span><span class="token function">doPostprocessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// &lt;----------</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5C31\u662F\u8FD9\u4E48\u7B80\u5355\uFF0C\u5FEB\u6CE8\u518C\u51E0\u4E2A\u5904\u7406\u5668\u8BD5\u8BD5\u5427\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function">registerPreprocessor</span><span class="token punctuation">(</span><span class="token string">&#39;jump&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I can jump high!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function">registerPreprocessor</span><span class="token punctuation">(</span><span class="token string">&#39;swim&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I can swim fast!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Ext<span class="token punctuation">.</span>ClassManager<span class="token punctuation">.</span><span class="token function">registerPostprocessor</span><span class="token punctuation">(</span><span class="token string">&#39;rest&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I have to take a break!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Qiang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6B64\u65F6\u53EF\u4EE5\u770B\u5230\uFF0C\u5F53\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A\u65B0\u7C7B( <code>&#39;Qiang&#39;</code> )\u65F6\uFF0C\u5404\u9884\u5904\u7406\u5668\u88AB\u6267\u884C\uFF1A</p><p><img src="`+d+'" alt="./classsystem_06"></p><p>\u5176\u5B9E\uFF0CExtJS \u5B9E\u73B0\u524D\u7F6E\u5904\u7406\u5668\u548C\u540E\u7F6E\u5904\u7406\u5668\u7684\u8FC7\u7A0B\u662F\u975E\u5E38\u590D\u6742\u7684\uFF0C\u4E0D\u8FC7\u601D\u8DEF\u5374\u6781\u4E3A\u7B80\u5355\uFF0C\u6B63\u5982\u6211\u4EEC\u521A\u521A\u770B\u5230\u7684\u3002\u5728\u6211\u4EEC\u7684\u4EE3\u7801\u57FA\u7840\u4E0A\uFF0C\u8FD8\u53EF\u4EE5\u589E\u52A0\u5F88\u591A\u8F85\u52A9\u65B9\u6CD5\uFF0C\u4F8B\u5982\uFF0C\u8C03\u6574\u5DF2\u6CE8\u518C\u7684\u5904\u7406\u5668\u987A\u5E8F\u3001\u589E\u52A0\u66F4\u591A\u7684\u94A9\u5B50\u65B9\u6CD5\u3001\u6CE8\u518C\u4E8B\u4EF6\u5E76\u89E6\u53D1\u7B49\u7B49\u3002\u4E8B\u5B9E\u4E0A ExtJS \u6B63\u662F\u8FD9\u4E48\u505A\u7684\uFF0C\u5B83\u8FD8\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u5F88\u591A\u4F18\u79C0\u7684\u5904\u7406\u5668\uFF0C\u4E0D\u50CF\u6211\u4EEC\u7684\u793A\u4F8B\u4EE3\u7801\u53EA\u662F\u7C97\u7CD9\u7684 <code>console.log</code> \uFF0C\u5B83\u4EEC\u975E\u5E38\u5F3A\u5927\uFF0C\u5B83\u4EEC\u6B63\u662F\u4E4B\u524D\u4ECB\u7ECD\u7684 <code>Ext.define</code> \u8BF8\u591A\u529F\u80FD\u7684\u5B9E\u9645\u5B9E\u73B0\uFF1A</p><p><img src="'+g+`" alt="./classsystem_07"></p><h2 id="\u5C31\u6B64\u7ED3\u675F\u4E86\u5417" tabindex="-1"><a class="header-anchor" href="#\u5C31\u6B64\u7ED3\u675F\u4E86\u5417" aria-hidden="true">#</a> \u5C31\u6B64\u7ED3\u675F\u4E86\u5417\uFF1F</h2><p>\u8FD8\u4E0D\u591F\uFF0C\u6211\u4EEC\u5E94\u8BE5\u53EA\u5904\u7406\u7528\u6237\u6307\u5B9A\u7684\u5904\u7406\u5668\uFF0C\u5982\u4E0B\u9762\u7684\u8C03\u7528\u53EA\u6267\u884C <code>swim</code> \u5904\u7406\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ext<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;Swimmer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">swim</span><span class="token operator">:</span> <span class="token string">&#39;very fast!&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u53E6\u5916\uFF0C<code>Ext.define</code> \u521B\u5EFA\u51FA\u7684\u7C7B\uFF0C\u53EA\u662F\u901A\u8FC7\u5B57\u7B26\u4E32\u9759\u6001\u6307\u5B9A\u7684\u7C7B\u540D\uFF0C\u6211\u4EEC\u8FD8\u5E94\u8BE5\u628A\u5B83\u653E\u5165\u5168\u5C40\u53D8\u91CF\u4E2D\uFF0C\u540C\u65F6\u4E3A\u5176\u5904\u7406\u597D\u547D\u540D\u7A7A\u95F4\u95EE\u9898\uFF0C\u4EE5\u4FBF\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u5B83\u3002</p><p>\u8FD8\u6709\u4E00\u5927\u5806\u9700\u8981\u5B9E\u73B0\u7684 API \u65B9\u6CD5\uFF0C\u8FD8\u6709\u65E0\u6570\u7684\u7EC6\u8282\u9700\u8981\u5904\u7406\u3002</p><p>\u6211\u5BF9 ExtJS \u7CFB\u7EDF\u7684\u8BB2\u89E3\u7ED3\u675F\u4E86\uFF0C\u800C\u6211\u5E0C\u671B\u5BF9\u4F60\u4EC5\u4EC5\u662F\u5F00\u59CB\uFF0C\u5E0C\u671B\u6211\u7684\u5206\u6790\u8BB2\u89E3\u53EF\u4EE5\u5E2E\u4F60\u66F4\u6DF1\u5165\u5730\u7406\u89E3 ExtJS \u7C7B\u7CFB\u7EDF\uFF0C\u66F4\u4FBF\u4E8E\u4F60\u7406\u89E3\u5B83\u7684\u6E90\u7801\uFF0C\u66F4\u4FBF\u4E8E\u4F60\u4F7F\u7528\u3001\u6269\u5C55\u5B83\u3002</p><hr><p>@ssbunny 2015-06-26</p>`,110);function j(C,S){const p=t("ExternalLinkIcon");return o(),e(l,null,[y,s("p",null,[v,s("a",x,[w,c(p)]),h]),E],64)}var J=u(f,[["render",j]]);export{J as default};
