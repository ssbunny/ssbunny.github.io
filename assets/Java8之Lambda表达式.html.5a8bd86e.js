import{r as a,o as p,e as t,b as n,a as e,F as o,i as c,d as l}from"./app.121f5ede.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=c(`<h1 id="java8-\u4E4B-lambda-\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#java8-\u4E4B-lambda-\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> Java8 \u4E4B Lambda \u8868\u8FBE\u5F0F</h1><p>Lambda \u8868\u8FBE\u5F0F\u5E76\u4E0D\u662F\u4EC0\u4E48\u65B0\u6982\u5FF5\uFF0CJava8 \u4E2D\u5F15\u5165\u5B83\u4E3B\u8981\u89E3\u51B3\u53EA\u6709\u5355\u4E00\u65B9\u6CD5\u7684\u533F\u540D\u7C7B\u4F7F\u7528\u8D77\u6765\u8FC7\u4E8E\u4E11\u964B\u3001\u6666\u6DA9\u7684\u95EE\u9898\u3002\u4E0D\u8BF4\u5E9F\u8BDD\u3002\u5047\u8BBE\u6709\u8FD9\u6837\u4E00\u4E2A\u5BF9\u8C61\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Sex</span> <span class="token punctuation">{</span>
        MALE<span class="token punctuation">,</span> FEMALE
    <span class="token punctuation">}</span>

    <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token class-name">LocalDate</span> birthday<span class="token punctuation">;</span>
    <span class="token class-name">Sex</span> gender<span class="token punctuation">;</span>
    <span class="token class-name">String</span> emailAddress<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5982\u679C\u60F3\u4ECE\u4E00\u7EC4 <code>Person</code> \u4E2D\u6253\u5370\u7279\u5B9A\u5E74\u9F84\u7684\uFF0C\u4EE3\u7801\u770B\u8D77\u6765\u662F\u8FD9\u6837\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printPersonsOlderThan</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> roster<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> p <span class="token operator">:</span> roster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span><span class="token function">printPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5982\u679C\u67E5\u627E\u5E74\u9F84\u7684\u7B97\u6CD5\u53D8\u4E86\uFF0C\u4F60\u53EF\u80FD\u4F1A\u628A\u4EE3\u7801\u6539\u6210\u8FD9\u6837\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printPersonsWithinAgeRange</span><span class="token punctuation">(</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> roster<span class="token punctuation">,</span> <span class="token keyword">int</span> low<span class="token punctuation">,</span> <span class="token keyword">int</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> p <span class="token operator">:</span> roster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span><span class="token function">printPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u65F6\u4F60\u610F\u8BC6\u5230\uFF0C\u7B97\u6CD5\u7684\u6539\u53D8\u603B\u662F\u4F1A\u5BFC\u81F4\u4FEE\u6539\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u4E3A\u4E86\u5E94\u5BF9\u5C06\u6765\u53EF\u80FD\u7684\u53D8\u5316\uFF0C\u4F60\u60F3\u5230\u4E86\u628A\u67E5\u627E <code>Person</code> \u7684\u7B97\u6CD5\u4ECE\u4E2D\u5265\u79BB\u51FA\u6765\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printPersons</span><span class="token punctuation">(</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> roster<span class="token punctuation">,</span> <span class="token class-name">CheckPerson</span> tester<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> p <span class="token operator">:</span> roster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tester<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span><span class="token function">printPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u65F6\u53EA\u9700\u8981\u9488\u5BF9\u4E0D\u540C\u7684\u67E5\u627E\u7B97\u6CD5\u63D0\u4F9B\u4E0D\u540C\u7684\u5B9E\u73B0\u7C7B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token class-name">CheckPerson</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">CheckPersonEligibleForSelectiveService</span> <span class="token keyword">implements</span> <span class="token class-name">CheckPerson</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> p<span class="token punctuation">.</span>gender <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE <span class="token operator">&amp;&amp;</span>
            p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span> <span class="token operator">&amp;&amp;</span>
            p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8C03\u7528\u7684\u65F6\u5019\uFF0C\u53EA\u9700\u8981\u5B9E\u4F8B\u5316\u7279\u5B9A\u7684\u5B9E\u73B0\u7C7B\u5E76\u4F20\u5165\u65B9\u6CD5\u5373\u53EF\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">printPersons</span><span class="token punctuation">(</span>roster<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CheckPersonEligibleForSelectiveService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u7136\u800C\u8FD9\u6837\u7684\u65B9\u5F0F\u4F1A\u5F15\u5165\u4E00\u5806\u201C\u5F88\u5C0F\u201D\u7684\u5B9E\u73B0\u7C7B\u3002\u4E8E\u662F\u4F60\u53D1\u73B0\u8FD9\u79CD\u573A\u666F\u4E0B\u4F7F\u7528\u533F\u540D\u7C7B\u66F4\u4E3A\u5408\u9002\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">printPersons</span><span class="token punctuation">(</span>
    roster<span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">CheckPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE
                <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
                <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_1-lambda-\u8868\u8FBE\u5F0F\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_1-lambda-\u8868\u8FBE\u5F0F\u7684\u4F7F\u7528" aria-hidden="true">#</a> 1. Lambda \u8868\u8FBE\u5F0F\u7684\u4F7F\u7528</h2><p><code>CheckPerson</code> \u662F\u4E00\u4E2A<strong>\u51FD\u6570\u63A5\u53E3</strong>\uFF0C\u5B83\u662F\u6307\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u7684\u63A5\u53E3(\u53CB\u60C5\u63D0\u793A: \u6CA1\u6709\u4EFB\u4F55\u65B9\u6CD5\u7684\u63A5\u53E3\u53EB<strong>\u6807\u8BC6\u63A5\u53E3</strong>)\u3002\u7531\u4E8E\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u6211\u4EEC\u5B8C\u5168\u6709\u7406\u7531\u5728\u5B9E\u73B0\u4E2D\u5FFD\u7565\u6389\u65B9\u6CD5\u540D\uFF0C\u800C\u8FD9\u6B63\u662F Lambda \u8868\u8FBE\u5F0F\u7684\u4F5C\u7528\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">printPersons</span><span class="token punctuation">(</span>
    roster<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u518D\u56DE\u987E\u4E00\u4E0B <code>CheckPerson</code> \u63A5\u53E3\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token class-name">CheckPerson</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Person</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u6837\u7684<strong>\u51FD\u6570\u63A5\u53E3</strong>\u8FC7\u4E8E\u7B80\u5355\uFF0C\u4F3C\u4E4E\u6CA1\u6709\u5FC5\u8981\u5728\u5E94\u7528\u4E2D\u5B9A\u4E49\u8BF8\u591A\u7C7B\u4F3C\u7684\u4E1C\u897F\u3002\u4E8E\u662F JDK \u7ED9\u4F60\u63D0\u4F9B\u4E86\u5F88\u591A\u5F00\u7BB1\u5373\u7528\u7684\u63A5\u53E3\uFF0C\u5B83\u4EEC\u5728 <code>java.util.function</code> \u5305\u4E2D\u3002\u6BD4\u5982\u8BE5\u4F8B\u4E2D\u53EF\u4EE5\u4F7F\u7528 <code>Predicate&lt;T&gt;</code> \uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F7F\u7528\u5B83\u6765\u66FF\u6362 <code>CheckPerson</code> \u63A5\u53E3\uFF0C\u4EE3\u7801\u53D8\u6210\u4E86\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printPersonsWithPredicate</span><span class="token punctuation">(</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> roster<span class="token punctuation">,</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> tester<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> p <span class="token operator">:</span> roster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tester<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span><span class="token function">printPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5BF9\u5E94\u7684\u8C03\u7528\u65B9\u5F0F\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">printPersonsWithPredicate</span><span class="token punctuation">(</span>
    roster<span class="token punctuation">,</span>
    p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u73A9\u5B8C\u4E86\u5E74\u9F84\u7684\u67E5\u627E\u7B97\u6CD5\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0B\u6267\u884C\u903B\u8F91\u3002\u524D\u9762\u7684\u793A\u4F8B\u5728\u627E\u5230\u5408\u6CD5\u7684\u5E74\u9F84\u540E\uFF0C\u53EA\u662F\u8C03\u7528\u4E86 <code>printPerson()</code> \u65B9\u6CD5\u8FDB\u884C\u6253\u5370\u3002\u5982\u679C\u60F3\u6539\u53D8\u8FD9\u4E00\u6267\u884C\u903B\u8F91\uFF0C\u4E0D\u518D\u662F\u6253\u5370\u5462\uFF1F\u6211\u4EEC\u53EF\u4EE5\u5C06\u6267\u884C\u8FC7\u7A0B\u5F53\u4F5C\u4E00\u4E2A\u53C2\u6570\u5E76\u4F7F\u7528 lambda \u8868\u8FBE\u5F0F\u6765\u6539\u9020\u3002\u8981\u8BB0\u4F4F\uFF0C\u4F7F\u7528 lambda \u8868\u8FBE\u5F0F\u5FC5\u987B\u5B9E\u73B0\u51FD\u6570\u63A5\u53E3\u3002</p><p><code>Consumer&lt;T&gt;</code> \u63A5\u53E3\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u53C2\u6570\u5E76\u8FD4\u56DE <code>void</code> \uFF0C\u8BE5\u63A5\u53E3\u5305\u542B\u4E00\u4E2A\u65B9\u6CD5\uFF1A<code>void accept(T t)</code> \uFF0C\u4F7F\u7528\u5B83\u5C06\u4EE3\u7801\u6539\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">processPersons</span><span class="token punctuation">(</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> roster<span class="token punctuation">,</span>
        <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> tester<span class="token punctuation">,</span>
        <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> block<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> p <span class="token operator">:</span> roster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tester<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            block<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u65F6\u4FBF\u53EF\u4EE5\u5C06\u4E0D\u540C\u7684\u6267\u884C\u903B\u8F91\u5F53\u4F5C\u53C2\u6570\u4F20\u5165\uFF0C\u5982\u679C\u4F9D\u7136\u60F3\u6267\u884C\u6253\u5370\u65B9\u6CD5\uFF0C\u5219\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">processPersons</span><span class="token punctuation">(</span>
     roster<span class="token punctuation">,</span>
     p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE
         <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
         <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">,</span>
     p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">printPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6709\u65F6\u4F1A\u9700\u8981\u5904\u7406\u540E\u5F97\u5230\u4E00\u4E2A\u8FD4\u56DE\u503C\uFF0C<code>Function&lt;T,R&gt;</code> \u63A5\u53E3\u6B63\u662F\u6B64\u4F5C\u7528\uFF0C\u5B83\u5305\u542B\u4E00\u4E2A <code>R apply(T t)</code> \u65B9\u6CD5\u3002\u73B0\u5728\u6765\u7EE7\u7EED\u6539\u9020\u4E0A\u9762\u7684\u4F8B\u5B50\uFF0C\u52A0\u5165\u4E00\u4E2A\u65B0\u53C2\u6570 <code>mapper</code> \u6765\u63D0\u4F9B\u83B7\u5F97\u6570\u636E\u7684\u903B\u8F91\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">processPersonsWithFunction</span><span class="token punctuation">(</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> roster<span class="token punctuation">,</span>
        <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> tester<span class="token punctuation">,</span>
        <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> mapper<span class="token punctuation">,</span>
        <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> block<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> p <span class="token operator">:</span> roster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tester<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> data <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
            block<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8C03\u7528\u4EE3\u7801\uFF0C\u83B7\u5F97\u7528\u6237\u7684\u7535\u5B50\u90AE\u4EF6\u5730\u5740\u5E76\u8F93\u51FA\u5230\u63A7\u5236\u53F0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">processPersonsWithFunction</span><span class="token punctuation">(</span>
    roster<span class="token punctuation">,</span>
    p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">,</span>
    p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getEmailAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    email <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_2-\u5145\u5206\u4F7F\u7528\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#_2-\u5145\u5206\u4F7F\u7528\u6CDB\u578B" aria-hidden="true">#</a> 2. \u5145\u5206\u4F7F\u7528\u6CDB\u578B</h2><p>\u4E8B\u5B9E\u4E0A\uFF0C\u6211\u4EEC\u4E0A\u9762\u5F97\u5230\u7684 <code>processPersonsWithFunction</code> \u65B9\u6CD5\u4E0D\u4EC5\u53EF\u4EE5\u5904\u7406 <code>Person</code> \u7C7B\u578B\uFF0C\u5982\u679C\u6211\u4EEC\u628A\u7C7B\u578B\u58F0\u660E\u6539\u7528\u6CDB\u578B\uFF0C\u53EF\u4EE5\u5F97\u5230\u66F4\u4E3A\u901A\u7528\u7684\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">X</span><span class="token punctuation">,</span> <span class="token class-name">Y</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">processElements</span><span class="token punctuation">(</span>
        <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">X</span><span class="token punctuation">&gt;</span></span> source<span class="token punctuation">,</span>
        <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">X</span><span class="token punctuation">&gt;</span></span> tester<span class="token punctuation">,</span>
        <span class="token class-name">Function</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">X</span><span class="token punctuation">,</span> <span class="token class-name">Y</span><span class="token punctuation">&gt;</span></span> mapper<span class="token punctuation">,</span>
        <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Y</span><span class="token punctuation">&gt;</span></span> block<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">X</span> p <span class="token operator">:</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tester<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Y</span> data <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
            block<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u9488\u5BF9 <code>Person</code> \u7C7B\u578B\uFF0C\u4F9D\u7136\u53EF\u4EE5\u5982\u6B64\u8C03\u7528\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">processElements</span><span class="token punctuation">(</span>
    roster<span class="token punctuation">,</span>
    p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">,</span>
    p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getEmailAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    email <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5B83\u7684\u6267\u884C\u8FC7\u7A0B\u662F\u8FD9\u6837\u7684\uFF1A</p><ol><li>\u4ECE\u96C6\u5408 source \u4E2D\u83B7\u53D6\u4E00\u7EC4\u5BF9\u8C61\uFF0C\u8BE5\u4F8B\u4ECE roster \u4E2D\u83B7\u5F97 Person \u5BF9\u8C61\u3002</li><li>\u4ECE\u8FD9\u7EC4\u5BF9\u8C61\u4E2D\u8FC7\u6EE4\u51FA\u7B26\u5408 tester \u7684( \u5373\u6EE1\u8DB3 Predicate \u7684\u5BF9\u8C61 )\u3002\u8BE5\u4F8B\u7684 Predicate \u4F7F\u7528 lambda \u8868\u8FBE\u5F0F\u3002</li><li>\u901A\u8FC7 Function \u7C7B\u578B\u7684\u5BF9\u8C61 mapper \uFF0C\u5C06\u4E0A\u9762\u8FC7\u6EE4\u51FA\u7684\u5BF9\u8C61\u7C7B\u578B\u6620\u5C04\u4E3A\u67D0\u503C\u7C7B\u578B\u3002\u8BE5\u4F8B\u4E2D\u7684 Function \u5BF9\u8C61\u662F Lambda \u8868\u8FBE\u5F0F\uFF0C\u5B83\u8FD4\u56DE\u4E86 String \u578B\u7684\u7535\u5B50\u90AE\u4EF6\u5730\u5740\u3002</li><li>\u5C06\u6620\u5C04\u540E\u7684\u503C\u901A\u8FC7 Consumer \u5BF9\u8C61 block \u6267\u884C\u67D0\u884C\u4E3A\u3002\u8BE5\u4F8B\u4E2D\u7684 Consumer \u5BF9\u8C61\u4E5F\u662F Lambda \u8868\u8FBE\u5F0F\uFF0C\u6267\u884C\u7684\u884C\u4E3A\u662F\u6253\u5370\u5B57\u7B26\u4E32\u3002</li></ol><h2 id="_3-\u4F7F\u7528\u94FE\u5F0F\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-\u4F7F\u7528\u94FE\u5F0F\u64CD\u4F5C" aria-hidden="true">#</a> 3. \u4F7F\u7528\u94FE\u5F0F\u64CD\u4F5C</h2><p>\u4F7F\u7528 Lambda \u8868\u8FBE\u5F0F\u4F5C\u4E3A\u53C2\u6570\uFF0C\u4F7F\u5F97\u94FE\u5F0F\u64CD\u4F5C\u53D8\u5F97\u6781\u4E3A\u65B9\u4FBF\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>roster
    <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
        p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE
            <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
            <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getEmailAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>email <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4F8B\u5B50\u4E2D\u7528\u5230\u7684\u65B9\u6CD5\u7B7E\u540D\u5982\u4E0B\uFF1A</p><ul><li>Stream stream()</li><li>Stream filter(Predicate&lt;? super T&gt; predicate)</li><li>Stream map(Function&lt;? super T,? extends R&gt; mapper)</li><li>void forEach(Consumer&lt;? super T&gt; action)</li></ul><p>\u53C2\u8003\u6B64\u4F8B\uFF0C\u53EF\u4EE5\u5728 Java \u4E2D\u5199\u51FA\u8BB8\u591A\u80FD\u591F\u5AB2\u7F8E\u652F\u6301\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u8BED\u8A00\u7684\u4EE3\u7801\u3002</p><h2 id="_4-\u5728-gui-\u4E2D\u7684\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#_4-\u5728-gui-\u4E2D\u7684\u5E94\u7528" aria-hidden="true">#</a> 4. \u5728 GUI \u4E2D\u7684\u5E94\u7528</h2><p>Java GUI \u7F16\u7A0B\u4E2D\u7ECF\u5E38\u51FA\u73B0\u7C7B\u4F3C\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActionEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5B83\u6781\u5176\u9002\u5408\u4F7F\u7528 Lambda \u8868\u8FBE\u5F0F\u8FDB\u884C\u6539\u9020\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>btn<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>
    event <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_5-\u8BED\u6CD5\u7EC6\u8282" tabindex="-1"><a class="header-anchor" href="#_5-\u8BED\u6CD5\u7EC6\u8282" aria-hidden="true">#</a> 5. \u8BED\u6CD5\u7EC6\u8282</h2><p>\u9886\u7565\u4E86 Lambda \u8868\u8FBE\u5F0F\u7684\u98CE\u91C7\u540E\uFF0C\u6765\u770B\u5176\u8BED\u6CD5\u3002Lambda \u8868\u8FBE\u5F0F\u7531\u4E09\u90E8\u5206\u7EC4\u6210\uFF1A</p><ul><li>\u5F62\u53C2\u5217\u8868</li><li>\u7BAD\u5934\u7B26\u53F7</li><li>\u4E3B\u4F53\u90E8\u5206</li></ul><p>\u9996\u5148\u662F\u653E\u5728\u5706\u62EC\u53F7\u4E2D\u7684\u3001\u4EE5\u9017\u53F7\u5206\u9694\u7684<strong>\u5F62\u53C2\u5217\u8868</strong>\u3002\u6BD4\u5982\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">(</span><span class="token class-name">User</span> u<span class="token punctuation">,</span> <span class="token class-name">Role</span> r<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5728 Lambda \u8868\u8FBE\u5F0F\u4E2D\u53EF\u4EE5\u7701\u7565\u53C2\u6570\u7C7B\u578B\uFF0C\u5F53\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\u65F6\uFF0C\u4E5F\u53EF\u4EE5\u7701\u7565\u5706\u62EC\u53F7\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE 
    <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
    <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>\u7BAD\u5934\u7B26\u53F7</strong>\u5C31\u662F <code>-&gt;</code> \u3002</p><p><strong>\u4E3B\u4F53</strong>\u53EF\u4EE5\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE 
    <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
    <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u8BED\u53E5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>p <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">18</span>
        <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">25</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u65E0\u8FD4\u56DE\u503C\u7684\u8BED\u53E5\u4E5F\u53EF\u4EE5\u4E0D\u4F7F\u7528\u8BED\u53E5\u5757(<code>{}</code>)\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>email <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6765\u770B\u4E00\u4E2A\u4F7F\u7528\u591A\u4E2A\u5F62\u53C2\u7684\u4F8B\u5B50\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Calculator</span> <span class="token punctuation">{</span>

    <span class="token keyword">interface</span> <span class="token class-name">IntegerMath</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>   
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">operateBinary</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token class-name">IntegerMath</span> op<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> op<span class="token punctuation">.</span><span class="token function">operation</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Calculator</span> myApp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IntegerMath</span> addition <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
        <span class="token class-name">IntegerMath</span> subtraction <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;40 + 2 = &quot;</span> <span class="token operator">+</span>
            myApp<span class="token punctuation">.</span><span class="token function">operateBinary</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> addition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;20 - 10 = &quot;</span> <span class="token operator">+</span>
            myApp<span class="token punctuation">.</span><span class="token function">operateBinary</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> subtraction<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u5B83\u7684\u8F93\u51FA\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>40 + 2 = 42
20 - 10 = 10
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_6-\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#_6-\u4F5C\u7528\u57DF" aria-hidden="true">#</a> 6. \u4F5C\u7528\u57DF</h2><p>Lambda \u8868\u8FBE\u5F0F\u4E2D\u53EF\u4EE5\u4F7F\u7528\u53D8\u91CF\uFF0C\u91C7\u7528\u8BCD\u6CD5\u4F5C\u7528\u57DF(ps\uFF1A\u53EF\u53C2\u8003 JavaScript \u4F5C\u7528\u57DF)\uFF0C\u4E0D\u5B58\u5728\u53D8\u91CF\u4F5C\u7528\u57DF\u5C4F\u853D\u95EE\u9898\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Consumer</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LambdaScopeTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">class</span> <span class="token class-name">FirstLevel</span> <span class="token punctuation">{</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">void</span> <span class="token function">methodInFirstLevel</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            
            <span class="token comment">// \u8BE5\u8BED\u53E5\u5C06\u4F1A\u5BFC\u81F4 \`\u8BED\u53E5A\` \u7F16\u8BD1\u9519\u8BEF\uFF1A</span>
            <span class="token comment">// &quot;local variables referenced from a lambda expression</span>
            <span class="token comment">// must be final or effectively final&quot;</span>
            <span class="token comment">// x = 99;</span>
            
            <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> myConsumer <span class="token operator">=</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> 
            <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;x = &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BED\u53E5A</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;y = &quot;</span> <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;this.x = &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;LambdaScopeTest.this.x = &quot;</span> <span class="token operator">+</span>
                    <span class="token class-name">LambdaScopeTest</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            myConsumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LambdaScopeTest</span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaScopeTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LambdaScopeTest<span class="token punctuation">.</span>FirstLevel</span> fl <span class="token operator">=</span> st<span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">FirstLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fl<span class="token punctuation">.</span><span class="token function">methodInFirstLevel</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>\u4E0A\u4F8B\u7684\u8F93\u51FA\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>x <span class="token operator">=</span> <span class="token number">23</span>
y <span class="token operator">=</span> <span class="token number">23</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span>
<span class="token class-name">LambdaScopeTest</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5982\u679C\u628A\u4F8B\u5B50\u4E2D\u7684 <code>myConsumer</code> \u7684\u53C2\u6570\u6539\u4E3A <code>y</code> :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> myConsumer <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5C06\u4F1A\u629B\u51FA\u9519\u8BEF\uFF1A &quot;variable x is already defined in method methodInFirstLevel(int)&quot; \u3002\u8FD9\u662F\u56E0\u4E3A Lambda \u8868\u8FBE\u5F0F\u5E76\u4E0D\u4F1A\u5F15\u5165\u65B0\u7684\u4F5C\u7528\u57DF\u8303\u56F4\u3002Lambda \u8868\u8FBE\u5F0F\u4E2D\u53EA\u80FD\u8BBF\u95EE final \u6216 effectively final \u7684\u53D8\u91CF\uFF0C\u8FD9\u4E00\u70B9\u548C\u533F\u540D\u7C7B\u4ECD\u7136\u662F\u4E00\u81F4\u7684\u3002</p><blockquote><p>effectively final \u662F Java8 \u7684\u7279\u6027\u4E4B\u4E00\uFF1A\u5C40\u90E8\u5185\u90E8\u7C7B\u548C\u533F\u540D\u5185\u90E8\u7C7B\u8BBF\u95EE\u7684\u5C40\u90E8\u53D8\u91CF\u5FC5\u987B\u7531final\u4FEE\u9970\uFF0CJava8 \u4E2D\u53EF\u4EE5\u4E0D\u52A0final\u4FEE\u9970\u7B26\uFF0C\u7531\u7CFB\u7EDF\u9ED8\u8BA4\u6DFB\u52A0\u3002</p></blockquote><h2 id="_7-\u76EE\u6807\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_7-\u76EE\u6807\u7C7B\u578B" aria-hidden="true">#</a> 7. \u76EE\u6807\u7C7B\u578B</h2><p>Lambda \u8868\u8FBE\u5F0F\u7684\u7C7B\u578B\u662F\u7531\u4E0A\u4E0B\u6587\u63A8\u5BFC\u800C\u6765\uFF0C\u5E76\u4E0D\u662F\u51FD\u6570\u63A5\u53E3\u7684\u540D\u79F0\u3002\u4F8B\u5982\u4E4B\u524D\u7684\u4E24\u4E2A\u4F8B\u5B50\uFF1A</p><ul><li>public static void printPersons(List roster, CheckPerson tester)</li><li>public void printPersonsWithPredicate(List roster, Predicate tester)</li></ul><p>\u5F53 Java \u7684\u8FD0\u884C\u65F6\u6267\u884C <code>printPersons</code> \u65B9\u6CD5\u65F6\u9700\u8981 <code>CheckPerson</code> \u7C7B\u578B\uFF0C\u56E0\u6B64 Lambda \u8868\u8FBE\u5F0F\u7684\u7C7B\u578B\u662F <code>CheckPerson</code> \u3002\u800C\u5728\u65B9\u6CD5 <code>printPersonsWithPredicate</code> \u4E2D\uFF0C\u5176\u7C7B\u578B\u4E3A <code>Predicate&lt;Person&gt;</code> \u3002\u8FD9\u79CD\u7C7B\u578B\u53EB\u505A <strong>\u76EE\u6807\u7C7B\u578B(target type)</strong> \uFF0C\u5B83\u53EA\u80FD\u5728\u4E0B\u5217\u573A\u666F\u4F7F\u7528\uFF1A</p><ul><li>\u53D8\u91CF\u58F0\u660E</li><li>\u8D4B\u503C</li><li>\u8FD4\u56DE\u8BED\u53E5 return</li><li>\u6570\u7EC4\u521D\u59CB\u5316</li><li>\u65B9\u6CD5\u6216\u6784\u9020\u5668\u53C2\u6570</li><li>Lambda \u8868\u8FBE\u5F0F\u4E3B\u4F53\u4E2D</li><li>\u6761\u4EF6\u8868\u8FBE\u5F0F ? :</li><li>\u7C7B\u578B\u8F6C\u6362</li></ul><p>\u6700\u540E\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50\u3002\u5047\u8BBE\u6709\u5982\u4E0B\u4E24\u4E2A\u51FD\u6570\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">V</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>Runnable.run </code> \u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u800C <code>Callable&lt;V&gt;.call</code> \u6709\u8FD4\u56DE\u503C\u3002</p><p>\u73B0\u5728\u6709\u8FD9\u6837\u4E24\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4E0B\u9762\u7684\u8BED\u53E5\u4F1A\u6267\u884C\u54EA\u4E2A\u65B9\u6CD5\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u7B54\u6848\u662F <code>invoke(Callable&lt;T&gt;)</code> \uFF0C\u56E0\u4E3A\u5B83\u6709\u8FD4\u56DE\u503C\u3002\u56E0\u6B64\uFF0CLambda \u8868\u8FBE\u5F0F\u7684\u7C7B\u578B\u662F <code>Callable&lt;T&gt;</code> \uFF0C\u5F88\u7B80\u5355\u5BF9\u5417\uFF1F</p><p><strong>\u53C2\u8003\u8D44\u6599</strong></p>`,94),k={href:"https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html",target:"_blank",rel:"noopener noreferrer"},b=l("The Java\u2122 Tutorials: Lambda Expressions"),m=n("hr",null,null,-1),d=n("p",null,"@ssbunny 2015-10-30",-1);function g(v,f){const s=a("ExternalLinkIcon");return p(),t(o,null,[r,n("ul",null,[n("li",null,[n("a",k,[b,e(s)])])]),m,d],64)}var j=u(i,[["render",g]]);export{j as default};
